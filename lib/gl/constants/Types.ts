import { GL } from "gl/constants/Webgl";
import { GL2 } from "gl/constants/Webgl2";
import Texture from "gl/Texture";

export type GLContext = WebGLRenderingContext | WebGL2RenderingContext
export type GLMedia = ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement
export type ValidUniformType = number|Float32List|Int32List|Uint32List|Texture

export enum GLDrawUsage {
  STATIC = GL.STATIC_DRAW,
  STREAM = GL.STREAM_DRAW,
  DYNAMIC = GL.DYNAMIC_DRAW,
}

export enum GLClear {
  DEPTH_BUFFER = GL.DEPTH_BUFFER_BIT,
  STENCIL_BUFFER = GL.STENCIL_BUFFER_BIT,
  COLOR_BUFFER = GL.COLOR_BUFFER_BIT,
}

export enum GLPrimitive {
  POINTS = GL.POINTS,
  LINES = GL.LINES,
  LINE_LOOP = GL.LINE_LOOP,
  LINE_STRIP = GL.LINE_STRIP,
  TRIANGLES = GL.TRIANGLES,
  TRIANGLE_STRIP = GL.TRIANGLE_STRIP,
  TRIANGLE_FAN = GL.TRIANGLE_FAN,
}

export enum GLBlendMode {
  ZERO = GL.ZERO,
  ONE = GL.ONE,
  SRC_COLOR = GL.SRC_COLOR,
  ONE_MINUS_SRC_COLOR = GL.ONE_MINUS_SRC_COLOR,
  SRC_ALPHA = GL.SRC_ALPHA,
  ONE_MINUS_SRC_ALPHA = GL.ONE_MINUS_SRC_ALPHA,
  DST_ALPHA = GL.DST_ALPHA,
  ONE_MINUS_DST_ALPHA = GL.ONE_MINUS_DST_ALPHA,
  DST_COLOR = GL.DST_COLOR,
  ONE_MINUS_DST_COLOR = GL.ONE_MINUS_DST_COLOR,
  SRC_ALPHA_SATURATE = GL.SRC_ALPHA_SATURATE,
  CONSTANT_COLOR = GL.CONSTANT_COLOR,
  ONE_MINUS_CONSTANT_COLOR = GL.ONE_MINUS_CONSTANT_COLOR,
  CONSTANT_ALPHA = GL.CONSTANT_ALPHA,
  ONE_MINUS_CONSTANT_ALPHA = GL.ONE_MINUS_CONSTANT_ALPHA,
}

export enum GLBlendEq {
  ADD = GL.FUNC_ADD,
  SUBTRACT = GL.FUNC_SUBTRACT,
  REVERSE_SUBTRACT = GL.FUNC_REVERSE_SUBTRACT,
}

export enum GLBuffer {
  ARRAY = GL.ARRAY_BUFFER,
  ELEMENTS = GL.ELEMENT_ARRAY_BUFFER,
}

export enum GLCulling {
  FRONT = GL.FRONT,
  BACK = GL.BACK,
  FRONT_AND_BACK = GL.FRONT_AND_BACK,
}

export enum GLType {
  BYTE = GL.BYTE,
  UNSIGNED_BYTE = GL.UNSIGNED_BYTE,
  SHORT = GL.SHORT,
  UNSIGNED_SHORT = GL.UNSIGNED_SHORT,
  INT = GL.INT,
  UNSIGNED_INT = GL.UNSIGNED_INT,
  FLOAT = GL.FLOAT,
}

export enum GLTypeSize {
  BYTE = 1,
  UNSIGNED_BYTE = 1,
  SHORT = 2,
  UNSIGNED_SHORT = 2,
  INT = 4,
  UNSIGNED_INT = 4,
  FLOAT = 4,
}

export enum GLShaderType {
  VERTEX = GL.VERTEX_SHADER,
  FRAGMENT = GL.FRAGMENT_SHADER,
}

export enum GLTextureWrap {
  MIRROR = GL.MIRRORED_REPEAT,
  CLAMP = GL.CLAMP_TO_EDGE,
  REPEAT = GL.REPEAT,
}

export enum GLTest {
  NEVER = GL.NEVER,
  LESS = GL.LESS,
  EQUAL = GL.EQUAL,
  LEQUAL = GL.LEQUAL,
  GREATER = GL.GREATER,
  NOTEQUAL = GL.NOTEQUAL,
  GEQUAL = GL.GEQUAL,
  ALWAYS = GL.ALWAYS,
}

export enum GLStencilActions {
  KEEP = GL.KEEP,
  REPLACE = GL.REPLACE,
  INCR = GL.INCR,
  DECR = GL.DECR,
  INVERT = GL.INVERT,
  INCR_WRAP = GL.INCR_WRAP,
  DECR_WRAP = GL.DECR_WRAP,
}

export enum GLFrontFaceDirection {
  Clockwise = GL.CW,
  CounterClockwise = GL.CCW
}

export enum GLColorFormat {
  RGB = GL.RGB,
  RGBA = GL.RGBA,
  ALPHA = GL.ALPHA,
  LUMINANCE = GL.LUMINANCE,
  LUMINANCE_ALPHA = GL.LUMINANCE_ALPHA,
}

export enum GLRenderBufferFormat {
  DEPTH = GL.DEPTH_COMPONENT16,
  STENCIL = GL.STENCIL_INDEX8,
  DEPTH_STENCIL = GL.DEPTH_STENCIL
}

export enum GLTextureFilter {
  LINEAR = GL.LINEAR,
  LINEAR_MIPMAP_LINEAR = GL.LINEAR_MIPMAP_LINEAR,
  LINEAR_MIPMAP_NEAREST = GL.LINEAR_MIPMAP_NEAREST,
  NEAREST = GL.NEAREST,
  NEAREST_MIPMAP_LINEAR = GL.NEAREST_MIPMAP_LINEAR,
  NEAREST_MIPMAP_NEAREST = GL.NEAREST_MIPMAP_NEAREST,
}

export enum GLTextureTarget {
  D2 = GL.TEXTURE_2D,
  D3 = GL2.TEXTURE_3D,
  CUBE = GL.TEXTURE_CUBE_MAP,
}


export enum GLUniformType {
  FLOAT = GL.FLOAT,
  FLOAT_VEC2 = GL.FLOAT_VEC2,
  FLOAT_VEC3 = GL.FLOAT_VEC3,
  FLOAT_VEC4 = GL.FLOAT_VEC4,
  INT_VEC2 = GL.INT_VEC2,
  INT_VEC3 = GL.INT_VEC3,
  INT_VEC4 = GL.INT_VEC4,
  BOOL = GL.BOOL,
  BOOL_VEC2 = GL.BOOL_VEC2,
  BOOL_VEC3 = GL.BOOL_VEC3,
  BOOL_VEC4 = GL.BOOL_VEC4,
  FLOAT_MAT2 = GL.FLOAT_MAT2,
  FLOAT_MAT3 = GL.FLOAT_MAT3,
  FLOAT_MAT4 = GL.FLOAT_MAT4,
  SAMPLER_2D = GL.SAMPLER_2D,
  SAMPLER_CUBE = GL.SAMPLER_CUBE,

  // Added with WebGL 2
  UNSIGNED_INT = GL.UNSIGNED_INT,
  UNSIGNED_INT_VEC2 = GL2.UNSIGNED_INT_VEC2,
  UNSIGNED_INT_VEC3 = GL2.UNSIGNED_INT_VEC3,
  UNSIGNED_INT_VEC4 = GL2.UNSIGNED_INT_VEC4,
  FLOAT_MAT2x3 = GL2.FLOAT_MAT2x3,
  FLOAT_MAT2x4 = GL2.FLOAT_MAT2x4,
  FLOAT_MAT3x2 = GL2.FLOAT_MAT3x2,
  FLOAT_MAT3x4 = GL2.FLOAT_MAT3x4,
  FLOAT_MAT4x2 = GL2.FLOAT_MAT4x2,
  FLOAT_MAT4x3 = GL2.FLOAT_MAT4x3,
  SAMPLER_3D = GL2.SAMPLER_3D,
  SAMPLER_2D_SHADOW = GL2.SAMPLER_2D_SHADOW,
  SAMPLER_2D_ARRAY = GL2.SAMPLER_2D_ARRAY,
  SAMPLER_2D_ARRAY_SHADOW = GL2.SAMPLER_2D_ARRAY_SHADOW,
  SAMPLER_CUBE_SHADOW = GL2.SAMPLER_CUBE_SHADOW,
  INT_SAMPLER_2D = GL2.INT_SAMPLER_2D,
  INT_SAMPLER_3D = GL2.INT_SAMPLER_3D,
  INT_SAMPLER_CUBE = GL2.INT_SAMPLER_CUBE,
  INT_SAMPLER_2D_ARRAY = GL2.INT_SAMPLER_2D_ARRAY,
  UNSIGNED_INT_SAMPLER_2D = GL2.UNSIGNED_INT_SAMPLER_2D,
  UNSIGNED_INT_SAMPLER_3D = GL2.UNSIGNED_INT_SAMPLER_3D,
  UNSIGNED_INT_SAMPLER_CUBE = GL2.UNSIGNED_INT_SAMPLER_CUBE,
  UNSIGNED_INT_SAMPLER_2D_ARRAY = GL2.UNSIGNED_INT_SAMPLER_2D_ARRAY,
}

