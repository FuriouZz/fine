import { mat4, quat, vec3 } from "gl-matrix";
export declare class Transform {
    localScale: vec3;
    localPosition: vec3;
    localRotation: quat;
    parent: Transform;
    children: Transform[];
    name: string;
    private matrix;
    private worldMatrix;
    private invalidWorldMatrix;
    private invalidMatrix;
    constructor();
    scale(x?: number, y?: number, z?: number): void;
    rotateX(radian: number): void;
    rotateY(radian: number): void;
    rotateZ(radian: number): void;
    translate(x: number, y: number, z: number): void;
    setPosition(x?: number, y?: number, z?: number): void;
    setRotation(axis: vec3 | number[], radian: number): void;
    getUp(out: vec3): void;
    getForward(out: vec3): void;
    getRight(out: vec3): void;
    decompose(): void;
    getMatrix(): mat4;
    setMatrix(m: mat4): void;
    getWorldMatrix(): mat4;
    getRoot(): any;
    getInvalidParent(): any;
    updateMatrix(): void;
    updateWorldMatrix(): void;
    private _updateWorldMatrix;
    invalidate(): void;
    addChild(t: Transform): void;
    removeChild(t: Transform): Transform[];
}
